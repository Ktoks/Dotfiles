{
"if": {
  "prefix": "if",
  "body": [
    "if ($1) {",
    "",
    "}"
  ],
  "description": "if"
},
"if else": {
  "prefix": "ife",
  "body": [
    "if ($1) {",
    "",
    "}",
    "else{",
    "",
    "}"
  ],
  "description": "if else"
},
"if elsif else": {
  "prefix": "ifee",
  "body": [
    "if ($1) {",
    "",
    "} elsif ($2) {",
    "",
    "} else {",
    "",
    "}"
  ],
  "description": "if elsif else"
},
"perl version, strict, warnings": {
  "prefix": "strict_warns",
  "body": [
    "#!/usr/bin/env perl",
    "use 5.18.0;",
    "use strict;",
    "use warnings;"
  ],
  "description": "perl version, strict, warnings"
},
"while": {
  "prefix": "while",
  "body": [
    "while (${1:\\$somebool}) {",
    "  ${2:# body...}",
    "}",
    ""
  ],
  "description": "while"
},
"foreach": {
  "prefix": "fore",
  "body": [
    "foreach my ${1:\\$object} (${2:\\@objects}){",
    "  ${3:# body ...}",
    "}",
    ""
  ],
  "description": "foreach"
},
"system with rc": {
  "prefix": "sysrc",
  "body": [
    "$rc = system(\"${1:<some command>}\");",
    ""
  ],
  "description": "system with rc"
},
"open write": {
  "prefix": "openw",
  "body": [
    "open(${1:\\$file_handle}, \">${2:\\$filename}\" ) or die \"Can't open ${2:\\'\\$filename\\'} : \\$!\";",
    "  printf ${1:\\$file_handle} \"${3:$some_value_to_write}\\n\";",
    "close(${1:\\$file_handle});",
    ""
  ],
  "description": "open write"
},
"open read": {
  "prefix": "openr",
  "body": [
    "open(${1:\\$file_handle}, \"<${2:\\$filename}\" ) or die \"Can't open ${2:\\'\\$filename\\'} : \\$!\";",
    "  while (${1:\\$file_handle}) {",
    "    chomp;",
    "    ${3:# body}",
    "  }",
    "close(${1:\\$file_handle});",
    ""
  ],
  "description": "open read"
},
"subprocess": {
  "prefix": "sub",
  "body": [
    "sub ${1:new_subprocess} {",
    "  my ${2:\\$1st_invar} = shift;",
    "  ${3:# body ...};",
    "  return ($4);",
    "}",
    ""
  ],
  "description": "subprocess"
},
"ghostscript embed all fonts": {
  "prefix": "ghostemb",
  "body": [
    "system(\"$gsvers -dSAFER -dNOPAUSE -dBATCH -dPDFSETTINGS=/prepress -sDEVICE=pdfwrite -sOutputFile=${1:\\$\\{loop_dir_curfile\\}.pdf \\$loop_dir_curfile}}\");",
    ""
  ],
  "description": "ghostscript embed all fonts"
},
"ghostscript normalize": {
  "prefix": "ghost",
  "body": [
    "system(\"$gsvers -dSAFER -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=${1:\\$\\{loop_dir_curfile\\}.pdf \\$loop_dir_curfile}}\");"
  ],
  "description": "ghostscript normalize"
}
}
