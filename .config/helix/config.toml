theme = "dark_plus"

[editor]
line-number = "relative"
scrolloff = 3
shell = ["sh", "-c"]
auto-completion = true
completion-trigger-len = 0


[editor.cursor-shape]
select = "block"
insert = "bar"
normal = "block"

[editor.file-picker]
hidden = false

[editor.lsp]
display-messages = false

[editor.search]
smart-case = true
wrap-around = true

[editor.indent-guides]
render = true
character = "|"


[keys.normal]
# Quick iteration on config changes
C-o = ":config-open"
C-r = ":config-reload"

"'" = ["repeat_last_motion"]

C-s = ":w" # Maps the Control-s to the typable command :w which is an alias for :write (save file)
g = { a = "code_action" } # Maps `ga` to show possible code actions
"ret" = ["open_below", "normal_mode"] # Maps the enter key to open_below then re-enter normal mode
    
# buffer navigation
H = ["goto_previous_buffer"]
L = ["goto_next_buffer"]

# Some nice Helix stuff (may try later)
# C-h = "select_prev_sibling"
# C-j = "shrink_selection"
# C-k = "expand_selection"
# C-l = "select_next_sibling"

u = ["undo", "collapse_selection"]

# Vim mappings: Personal preference
o = ["open_below", "insert_mode"]
O = ["open_above", "insert_mode"]

# Muscle memory
"{" = ["goto_prev_paragraph", "collapse_selection"]
"}" = ["goto_next_paragraph", "collapse_selection"]
0 = "goto_line_start"
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
V = ["select_mode", "extend_to_line_bounds"]
C = ["collapse_selection", "extend_to_line_end", "change_selection"] # Requires https://github.com/helix-editor/helix/issues/2051#issuecomment-1140358950
S = "surround_add" # Would be nice to be able to do something after this but it isn't chainable

# uncanny valley stuff, this makes w and b behave as they do Vim
# I may try this for a while and see how I like the highlighting while moving
w = ["move_next_word_start", "move_char_right", "collapse_selection"]
W = ["move_next_long_word_start", "move_char_right", "collapse_selection"]
e = ["move_next_word_end", "collapse_selection"]
E = ["move_next_long_word_end", "collapse_selection"]
b = ["move_prev_word_start", "collapse_selection"]
B = ["move_prev_long_word_start", "collapse_selection"]

# deleting stuffs:
d = { d = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "delete_selection"], e = ["move_next_word_end", "yank_main_selection_to_clipboard", "delete_selection"], E = ["move_next_word_end", "yank_main_selection_to_clipboard", "delete_selection"], w = ["move_next_word_start", "yank_main_selection_to_clipboard", "delete_selection"], W = ["move_next_long_word_start", "yank_main_selection_to_clipboard", "delete_selection"], b = ["move_prev_word_start", "yank_main_selection_to_clipboard", "delete_selection"], B = ["move_prev_long_word_start", "yank_main_selection_to_clipboard", "delete_selection"], G = ["select_mode", "goto_file_end", "yank_main_selection_to_clipboard", "delete_selection"], g = { g = ["select_mode", "goto_file_start", "yank_main_selection_to_clipboard", "delete_selection"] }, t = ["extend_till_char"], s = ["surround_delete"] }
D = ["extend_to_line_end", "delete_selection"]
c = { e = ["move_next_word_end", "delete_selection", "insert_mode"], E = ["move_next_long_word_end", "delete_selection", "insert_mode"], w = ["move_next_word_start", "delete_selection", "insert_mode"],  W = ["move_next_long_word_start", "delete_selection", "insert_mode"], b = ["move_prev_word_start", "delete_selection", "insert_mode"],  b = ["move_prev_long_word_start", "delete_selection", "insert_mode"], i = ["select_textobject_inner", "delete_selection", "insert_mode"] }
# Clipboards over registers ye ye
x = "delete_selection"
p = ["replace_selections_with_clipboard", "collapse_selection"] # No life without this
P = ["paste_clipboard_before", "collapse_selection"]
# Would be nice to add ya and yi, but the surround commands can't be chained
y = ["yank_main_selection_to_clipboard", "normal_mode", "flip_selections", "collapse_selection"]
Y = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "goto_line_start", "collapse_selection"]
Y = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "goto_line_start", "collapse_selection"]

# Escape the madness! No more fighting with the cursor! Or with multiple cursors!
esc = ["collapse_selection", "keep_primary_selection"]


[keys.insert]
j = { k = ["collapse_selection", "normal_mode"] } # Maps `jk` to exit insert mode
# Escape the madness! No more fighting with the cursor! Or with multiple cursors!
esc = ["collapse_selection", "normal_mode"]


[keys.select]
# Muscle memory
"{" = ["extend_to_line_bounds", "goto_prev_paragraph"]
"}" = ["extend_to_line_bounds", "goto_next_paragraph"]
0 = "goto_line_start"
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
D = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "delete_selection", "normal_mode"]
C = ["goto_line_start", "extend_to_line_bounds", "change_selection"]
c = "change_selection"
S = "surround_add" # Basically 99% of what I use vim-surround for
j = { k = ["collapse_selection", "normal_mode"] } # Maps `jk` to exit insert mode

# Visual-mode specific muscle memory
i = "select_textobject_inner"
a = "select_textobject_around"

# Some extra binds to allow us to insert/append in select mode because it's nice with multiple cursors
tab = ["insert_mode", "collapse_selection"] # tab is read by most terminal editors as "C-i"
C-a = ["append_mode", "collapse_selection"]

# Clipboards over registers ye ye
d = ["yank_main_selection_to_clipboard", "delete_selection"]
x = ["yank_main_selection_to_clipboard", "delete_selection"]
y = ["yank_main_selection_to_clipboard", "normal_mode", "collapse_selection"]
Y = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "goto_line_start", "collapse_selection", "normal_mode"]
p = ["replace_selections_with_clipboard", "collapse_selection"] # No life without this
P = ["paste_clipboard_before", "collapse_selection"]

# Escape the madness! No more fighting with the cursor! Or with multiple cursors!
esc = ["collapse_selection", "keep_primary_selection", "normal_mode"]
